#BlueJ class context
comment0.target=LexiconNode
comment0.text=\n\ LexiconNode\n\ Each\ node\ is\ a\ component\ of\ the\ trie\n\ These\ nodes\ are\ then\ combined\ into\ words\ and\ prefixes\ in\ allignment\ with\ the\ Lexicon\ interface.\n\ \n
comment1.params=value
comment1.target=LexiconNode(char)
comment1.text=\n\ Constructor\n\ @param\ value\ -\ the\ character\ to\ be\ stored\n
comment10.params=c
comment10.target=void\ removeChild(char)
comment10.text=\n\ removeChild\n\ @param\ c\ -\ the\ char\ of\ the\ child\ to\ be\ removed\n
comment11.params=
comment11.target=int\ totalChildren()
comment11.text=\n\ totalChildren\n\ \n\ @return\ int\ -\ the\ number\ of\ children\n
comment2.params=
comment2.target=char\ getValue()
comment2.text=\n\ getValue\n\ gets\ the\ char\n\ \n\ @return\ char\ -\ the\ char\n
comment3.params=c
comment3.target=boolean\ addChild(char)
comment3.text=\n\ Add\ child\ by\ character\n\ Takes\ a\ char,\ makes\ a\ new\ node,\ and\ adds\ it\ as\ a\ child\ to\ the\ node\ under\ consideration\n\ \n\ @param\ c\ -\ the\ character\ to\ be\ added\n\ @return\ boolean\ -\ I'm\ basically\ using\ this\ as\ a\ break\ here.\ Originally\ I\ used\ the\ boolean\ to\ indicate\ \n\ that\ the\ node\ could\ actually\ be\ added\ (that\ is,\ the\ method\ would\ return\ false\ if\ the\ char\ in\ question\ was\ already\ a\ child)\n\ but\ upon\ Prof.\ Barker's\ suggestion,\ I\ outsourced\ that\ distinction\ to\ the\ LexiconTrie\n
comment4.params=index
comment4.target=LexiconNode\ getChild(int)
comment4.text=\n\ Gets\ child\ by\ index\n\ \n\ @param\ index\ -\ the\ index\ at\ which\ to\ look\ for\ a\ child\n\ @return\ LexiconNode\ -\ the\ child\ to\ be\ returned\n
comment5.params=c
comment5.target=LexiconNode\ getChild(char)
comment5.text=\n\ Gets\ child\ by\ character\n\ \n\ @param\ c\ -\ the\ character\ of\ the\ child\ we\ want\ to\ get\n\ @return\ LexiconNode\ -\ the\ child\ to\ be\ returned\n
comment6.params=b
comment6.target=void\ isWord(boolean)
comment6.text=\n\ isWord\ \n\ Sets\ the\ boolean\ finality,\ to\ mark\ if\ the\ node\ in\ question\ is\ the\ final\ letter\ in\ some\ word\ or\ not\n\ \n\ @param\ b\ -\ the\ boolean\ we\ want\ to\ assign\n
comment7.params=
comment7.target=boolean\ isWord()
comment7.text=\n\ Tests\ the\ node\ to\ see\ if\ it\ is\ the\ final\ letter\ in\ some\ word\n\ \n\ @return\ boolean\ -\ true\ if\ it\ is,\ false\ otherwise\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ toString\n\ \n\ @return\ String\ -\ the\ value\ (a\ char)\ inside\ of\ the\ node\n
comment9.params=
comment9.target=java.util.Iterator\ iterator()
comment9.text=\n\ iterator\n\ \n\ @return\ Iterato<LexiconNode>\ -\ returns\ the\ standard\ list\ iterator\ but\ over\ all\ the\ children\ of\ the\ node\ in\ question\n
numComments=12
